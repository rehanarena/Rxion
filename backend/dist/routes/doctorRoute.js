"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const multer_1 = __importDefault(require("../middlewares/multer"));
const doctorController_1 = require("../controllers/doctor/doctorController");
const slotController_1 = require("../controllers/doctor/slotController");
const appointmentController_1 = require("../controllers/doctor/appointmentController");
const authDoctor_1 = __importDefault(require("../middlewares/authDoctor"));
const doctorRouter = express_1.default.Router();
doctorRouter.post("/login", doctorController_1.loginDoctor);
doctorRouter.post("/verify-otp", doctorController_1.verifyDoctorOtp);
doctorRouter.post("/resend-otp", doctorController_1.resendDoctorOtp);
doctorRouter.post("/forgotPasswordOTP", doctorController_1.doctorForgotPasswordOTP);
doctorRouter.put("/resetPasswordWithToken", doctorController_1.doctorResetPassword);
doctorRouter.put("/change-password", doctorController_1.changeDoctorPassword);
doctorRouter.get("/dashboard", authDoctor_1.default, doctorController_1.doctorDashboard);
doctorRouter.get("/list", doctorController_1.doctorList);
doctorRouter.get("/slot/:docId", slotController_1.slot);
doctorRouter.get("/:doctorId/slots", slotController_1.getSlotsByDoctor);
doctorRouter.post("/slots", slotController_1.addSlots);
doctorRouter.delete("/slots/:slotId", slotController_1.deleteSlot);
doctorRouter.put("/slots/:slotId/edit", slotController_1.editSlot);
doctorRouter.get("/profile", authDoctor_1.default, doctorController_1.doctorProfile);
doctorRouter.get("/specialties", doctorController_1.getSpeciality);
doctorRouter.post("/update-profile", authDoctor_1.default, doctorController_1.updateDoctorProfile);
doctorRouter.post('/upload', multer_1.default.single('file'), doctorController_1.fileUploadofDoc);
doctorRouter.get("/appointments", authDoctor_1.default, appointmentController_1.appoinmentsDoctor);
doctorRouter.post("/complete-appointment", authDoctor_1.default, appointmentController_1.appoinmentComplete);
doctorRouter.post("/cancel-appointment", authDoctor_1.default, appointmentController_1.appoinmentCancel);
exports.default = doctorRouter;
